#!/bin/bash
#
# PAIRED Stop Script
# 
# Stops the bridge and all agents for PAIRED
#
# Usage:
#   paired-stop              - Stop bridge and agents
#   paired-stop --help       - Show help

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${BLUE}🛑 PAIRED Stop${NC}"
echo "==============="

# Function to check if bridge is running
is_bridge_running() {
    curl -s http://localhost:7890/health > /dev/null 2>&1
    return $?
}

# Function to stop services
stop_services() {
    echo -e "${CYAN}🛑 Stopping PAIRED Services${NC}"
    echo "---------------------------"
    
    # Stop agents first
    AGENT_SCRIPT="$HOME/.paired/scripts/start-agents.sh"
    if [ -f "$AGENT_SCRIPT" ]; then
        echo -e "🤖 Stopping agents..."
        "$AGENT_SCRIPT" --stop 2>/dev/null || echo -e "${YELLOW}⚠️  Agent stop script failed${NC}"
    else
        echo -e "${YELLOW}⚠️  Agent script not found, trying manual cleanup...${NC}"
    fi
    
    # Always try direct process cleanup as fallback
    echo -e "🔍 Checking for running agent processes..."
    AGENT_PIDS=$(ps aux | grep "agent_launcher.js --agent" | grep -v grep | awk '{print $2}')
    if [ -n "$AGENT_PIDS" ]; then
        echo -e "${CYAN}🛑 Killing agent processes: $AGENT_PIDS${NC}"
        kill $AGENT_PIDS 2>/dev/null || true
        sleep 2
        # Force kill if still running
        REMAINING_PIDS=$(ps aux | grep "agent_launcher.js --agent" | grep -v grep | awk '{print $2}')
        if [ -n "$REMAINING_PIDS" ]; then
            echo -e "${YELLOW}⚠️  Force killing remaining processes: $REMAINING_PIDS${NC}"
            kill -9 $REMAINING_PIDS 2>/dev/null || true
        fi
        echo -e "${GREEN}✅ Agent processes terminated${NC}"
    else
        echo -e "${GREEN}✅ No agent processes found${NC}"
    fi
    
    # Stop bridge
    echo -e "🌉 Stopping bridge..."
    pkill -f "cascade_bridge_unified_takeover" 2>/dev/null || echo -e "${YELLOW}⚠️  Bridge not running${NC}"
    
    # Wait a moment and verify
    sleep 2
    
    if is_bridge_running; then
        echo -e "${RED}❌ Bridge still running, forcing stop...${NC}"
        pkill -9 -f "cascade_bridge_unified_takeover" 2>/dev/null || true
    fi
    
    echo -e "${GREEN}✅ PAIRED services stopped${NC}"
    echo -e "${CYAN}💡 Use 'paired-start' to restart services${NC}"
}

# Main execution
case "${1:-stop}" in
    "stop")
        stop_services
        ;;
    "--help"|"-h")
        echo "Usage: paired-stop [options]"
        echo "  (no args)  - Stop bridge and agents (default)"
        echo "  --help     - Show this help"
        ;;
    *)
        echo "Unknown option: $1"
        echo "Use --help for usage information"
        exit 1
        ;;
esac
